{"version":3,"sources":["App.tsx","goodsFromServer.tsx","components/GoodList.tsx","index.tsx"],"names":["SortType","goodsFromServer","id","name","GoodList","goods","map","good","App","state","sortType","NONE","isReversed","isAlphabetically","setState","ALPHABET","isLenth","LENGTH","isReset","isRverse","this","preparedList","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAOKA,E,iGCPQC,EAAkB,CAC7B,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,GAAIC,KAAM,W,OCDLC,EAA2B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzC,OACE,6BACGA,EAAMC,KAAI,SAACC,GACV,OACE,oBAAI,UAAQ,OAAZ,SAAkCA,EAAKJ,MAAfI,EAAKL,W,SFPlCF,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAMQ,EAAb,4MACEC,MAAQ,CACNC,SAAUV,EAASW,KACnBC,YAAY,GAHhB,EAMEC,iBAAmB,WACjB,EAAKC,SAAS,CAAEJ,SAAUV,EAASe,YAPvC,EAUEC,QAAU,WACR,EAAKF,SAAS,CAAEJ,SAAUV,EAASiB,UAXvC,EAcEC,QAAU,WACR,EAAKJ,SAAS,CAAEJ,SAAUV,EAASW,QAfvC,EAkBEQ,SAAW,WACT,EAAKL,UAAS,SAACL,GAAD,MAAY,CAAEG,YAAaH,EAAMG,gBAnBnD,4CAsBE,WACE,MAGIQ,KAAKX,MAFPC,EADF,EACEA,SACAE,EAFF,EAEEA,WAGIS,EAtDH,SACLhB,EADK,GAGJ,IADCK,EACF,EADEA,SAAUE,EACZ,EADYA,WAENU,EAAY,YAAOjB,GAEzB,OAAQK,GACN,KAAKV,EAASe,SACZO,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMrB,KAAKuB,cAAcD,EAAMtB,SACnE,MAEF,KAAKH,EAASiB,OACZK,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAChBA,EAAMtB,KAAKwB,OAASH,EAAMrB,KAAKwB,UAUrC,OAJKf,GACHU,EAAaM,UAGRN,EA+BgBO,CACnB5B,EACA,CAAES,WAAUE,eAGd,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,UAAWtB,IAAaV,EAASe,WAErCkB,QAASb,KAAKP,iBANhB,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,UAAWtB,IAAaV,EAASiB,SAErCgB,QAASb,KAAKJ,QANhB,4BAWA,wBACEe,KAAK,SACLD,UAAU,6BACVG,QAASb,KAAKD,SAHhB,qBAQET,IAAaV,EAASW,MAAQC,EAE5B,wBACEmB,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,UAAWtB,IAAaV,EAASW,OACrCsB,QAASb,KAAKF,QAJhB,mBASA,MAEN,cAAC,EAAD,CAAUb,MAAOgB,WA/EzB,GAAyBa,IAAMC,WGnD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c1c28187.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { goodsFromServer } from './goodsFromServer';\nimport { GoodList } from './components/GoodList';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface Good {\n  id: number;\n  name: string;\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: Good[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.name.localeCompare(good2.name));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => (\n        good2.name.length - good1.name.length));\n      break;\n\n    default: break;\n  }\n\n  if (!isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  isAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  isLenth = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  isReset = () => {\n    this.setState({ sortType: SortType.NONE });\n  };\n\n  isRverse = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  render() {\n    const {\n      sortType,\n      isReversed,\n    } = this.state;\n\n    const preparedList = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-info': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.isAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-info': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.isLenth}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={this.isRverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            ? (\n              <button\n                type=\"button\"\n                className={classNames('button is-info',\n                  { 'is-info': sortType !== SortType.NONE })}\n                onClick={this.isReset}\n              >\n                Reset\n              </button>\n            )\n            : '' }\n        </div>\n        <GoodList goods={preparedList} />\n      </div>\n    );\n  }\n}\n","export const goodsFromServer = [\n  { id: 1, name: 'Dumplings' },\n  { id: 2, name: 'Carrot' },\n  { id: 3, name: 'Eggs' },\n  { id: 4, name: 'Ice cream' },\n  { id: 5, name: 'Apple' },\n  { id: 6, name: 'Bread' },\n  { id: 7, name: 'Fish' },\n  { id: 8, name: 'Honey' },\n  { id: 9, name: 'Jam' },\n  { id: 10, name: 'Garlic' },\n];\n","interface Good {\n  id: number;\n  name: string;\n}\n\ntype Prop = {\n  goods: Good[];\n};\n\nexport const GoodList: React.FC<Prop> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good) => {\n        return (\n          <li data-cy=\"Good\" key={good.id}>{good.name}</li>\n        );\n      })}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}